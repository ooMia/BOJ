name: gh-pages-deployment

on:
  push:
    branches:
      - main

permissions:
  actions: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Update sub README.md
        run: |
          # Loop over all directories in the repository
          for dir in $(find . -mindepth 1 -type d); do
          
            # Skip irrelevant directories
            if [[ $dir =~ ^\.\/\.github* ]] || [[ $dir =~ ^\.\/\.git* ]]; then
              continue
            fi
            
            if [ -z "$(find "$dir" -mindepth 1 -maxdepth 1 -type d)" ]; then
              printf -- "[LOG] UPDATE README.md at %s: link of source code\n" "$dir"
              printf -- "\n\n\n" >> $dir/README.md
              printf -- "## 소스 코드\n" >> $dir/README.md
              for file in $(find $dir -type f); do
                if [[ $(basename $file) != "README.md" ]]; then
                  ls -l $dir
                  printf -- "- [%s](%s)\n" "$(basename $file)" "$(basename $file)" >> $dir/README.md
          
                  printf -- "[LOG] %s: append to %s/README.md\n" "$file" "$dir"

                  extension="${file##*.}"
                  printf -- "[LOG] %s: extension is %s\n" "$file" "$extension"

                  printf -- "\n\n```%s\n" "$extension" >> $dir/README.md
                  cat "$file" >> $dir/README.md
                  printf -- "\n```\n" >> $dir/README.md
                fi
              done
            else
              printf -- "[LOG] CREATE README.md at %s: index of sub-directories\n" "$dir"
              printf -- "## %s\n" "$dir" > $dir/README.md || printf -- "Failed to create README in %s\n" "$dir"
              printf -- "\n" >> $dir/README.md
              for subdir in $(find $dir -mindepth 1 -maxdepth 1 -type d); do
                printf -- "- [%s](%s)\n" "$(basename $subdir)" "$(basename $subdir)" >> $dir/README.md
              done
            fi
          done
        shell: bash

      - name: Create root README.md
        run: |
          printf -- "" > ./README.md
          for dir in $(find . -mindepth 1 -maxdepth 1 -type d); do
            if [[ $dir =~ ^\.\/\.github* ]] || [[ $dir =~ ^\.\/\.git* ]]; then
              continue
            fi
            printf -- "- [%s](%s)\n" "$(basename $dir)" "$(basename $dir)" >> ./README.md
          done
        shell: bash

      - name: Publish current workdir (which contains generated content) to GitHub Pages
        uses: rayluo/github-pages-overwriter@v1.3

        with:

          # Optional. Default value "." means the root directory of your project will be published.
          # You can use whatever directory your project uses, for example "wwwroot".
          # Such a directory does *not* have to already exist in your repo,
          # it could be an output directory created dynamically by your static website builder.
          source-directory: .

          # Optional. Default value "gh-pages".
          # It specifies the temporary branch which hosts the static website.
          # Each build will OVERWRITE this branch.
          target-branch: gh-pages
